name: Vulnerability Scanner - Database Generation

on:
  schedule:
    - cron: '20 0 * * *'
  pull_request:
    paths:
      - ".github/workflows/4_builderprecompiled_vulnerability-scanner-database.yml"
      - ".github/actions/compile_and_test/action.yml"
      - ".github/actions/vulnerability_scanner_deps/action.yml"
      - ".github/actions/vulnerability_scanner/content_generation/action.yml"
      - ".github/actions/vulnerability_scanner/compile/action.yml"

  workflow_dispatch:
    inputs:
      content_version:
        description: 'Identifier of the generated content. The generated file will be named vd_1.0.0_vd_<content_version>.tar.xz'
        required: true
        type: string

      upload_to_s3:
        description: 'Upload the generated content to S3'
        required: false
        default: false
        type: boolean

jobs:
  vulnerability_scanner_database_scheduled_update:
    if: ${{ (github.event_name == 'schedule') || (github.event_name == 'pull_request') }}

    runs-on: ubuntu-24.04

    strategy:
      fail-fast: false
      matrix:
        content_version: ["4.10.0", "4.11.0", "4.13.0"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Checkout to ${{ matrix.content_version }}
        run: |
          echo "Attempting to check out tag or branch for version: ${{ matrix.content_version }}"

          if git show-ref --tags --verify --quiet "refs/tags/v${{ matrix.content_version }}"; then
            echo "Tag found: v${{ matrix.content_version }}"
            git checkout --quiet "tags/v${{ matrix.content_version }}"
          elif git ls-remote --exit-code --heads origin "${{ matrix.content_version }}" > /dev/null; then
            echo "Branch found: ${{ matrix.content_version }}"
            git checkout --quiet "${{ matrix.content_version }}"
          else
            echo "⚠️ Neither tag nor branch '${{ matrix.content_version }}' exists. Falling back to 'main'."
            git checkout --quiet main
          fi

          echo "Git branch after checkout:"
          git branch

          # Replace all occurrences of 'wazuh_version' with 'content_version' in all .yml files
          find .github/actions .github/workflows -type f -name "*.yml" -exec sed -i 's/wazuh_version/content_version/g' {} +

      - name: Restore missing template file
        run: |
          template=src/wazuh_modules/vulnerability_scanner/indexer/template/index-template.json
          if [ -f "$template" ]; then
            if [ ! -d "templates" ]; then
              mkdir templates
            fi
            cp "$template" templates/vd_states_template.json
          fi

      - name: Compile
        uses: ./.github/actions/vulnerability_scanner/compile

      - name: Generate vulnerability database
        uses: ./.github/actions/vulnerability_scanner/content_generation
        with:
          content_version: ${{ matrix.content_version }}

      - name: Upload database to S3
        if: ${{ github.event_name == 'schedule' }}
        run: |
          root_folder=$(pwd)
          bucket="${{ secrets.FEED_AWS_BUCKET }}"
          file="vd_1.0.0_vd_${{ matrix.content_version }}.tar.xz"
          dest_dir="deps/vulnerability_model_database"
          aws s3 cp ${file} s3://${bucket}/${dest_dir}/${file} --acl public-read
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.FEED_AWS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.FEED_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-west-1'
        shell: bash

  vulnerability_scanner_database_manual_update:
    if: ${{ github.event_name == 'workflow_dispatch' }}

    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Compile
        uses: ./.github/actions/vulnerability_scanner/compile

      - name: Generate vulnerability database
        uses: ./.github/actions/vulnerability_scanner/content_generation
        with:
          content_version: ${{ inputs.content_version }}

      - name: Upload database to S3
        if: ${{ inputs.upload_to_s3 }}
        run: |
          root_folder=$(pwd)
          bucket="${{ secrets.FEED_AWS_BUCKET }}"
          file="vd_1.0.0_vd_${{ inputs.content_version }}.tar.xz"
          dest_dir="deps/vulnerability_model_database"
          aws s3 cp ${file} s3://${bucket}/${dest_dir}/${file} --acl public-read
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.FEED_AWS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.FEED_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-west-1'
        shell: bash
